0927 화요일
<출석체크>
09:10 김선형(휴가), 문호준, 박근태(병원), 이용수, 정민경(오후)

<공지사항>
내일(수)는 enum, 파일 입출력, 쓰레드, 자바총복습

<학습목표>
- 다형성 : 1교시
	부모타입이 자식타입을 받을 수 있는 것
	코드의 중복을 막고 유연한 코드를 만듦
	예) 바퀴 tire1 = new 한국타이어();
	    바퀴 tire2= new 금호타이어();
		바퀴 tire3 = new 넥센타이어();
	//바퀴 데이터타입에는 없는 변수나 함수가     금호타이어에만 있었다면?  없어진다.못쓴다.
	예) 사육사.moveAnimal(동물);	전달되는 동물의타입이 호랑이든, 코끼리든, 독수리든
- 제네릭 : 10시 25분부터 ~ 11:50
	//선생님숙제 : 정수, 실수 sum해서 total반환하는 함수 -> 해결
- 컬렉션프레임워크(자바의 자료구조)	:4교시
	4교시 : SET  = 순서가 없고, 중복이 없는 자료구조.
	5교시 : MAP = 키(Key)와 값(Value)의 쌍으로 이루어진 자료구조.
	    , LIST = 배열의 최대단점인 크기가 고정되는것을 보완한 자료구조
	



상속 = 부모 클래스의 변수와 메소드를 자식에서 그대로 물려받는것.
	문법 : 자식클래스 extends 부모클래스
	부모클래스는 추상클래스일수도있고 그냥클래스일수도있고.
	부모는 하나밖에 없어야한다.
추상클래스 = abstract 키워드가 붙은 추상메소드를 1개이상 가지고있는 클래스

웰치스 extends 음료수 implements 탄산, 포도맛, 캔음료
//웰치스라는 객체는 음료수 클래스가 가지고있는 변수, 함수를 다 쓸수있다. 코드가 없이도.
  탄산, 포도맛, 캔음료에 정의된 본문이 없는 모든 함수를 오버라이딩 해야한다는 의무를 가지고있다.
  


인터페이스 = 함수의 본문이 없이 어떤 이름의 함수가 어떤 데이터타입을 받아,
	      어떤 데이터타입을 리턴할것인지 문법적인 약속일뿐.
	      본문은 implements 한 구현체에서 오버라이딩 해야한다.

자바doc주석 : 함수나 클래스 위에 /** 엔터
제네릭 : 자바는 데이터타입이 정의할때 결정되어야 하지만, 
       정의시가 아니라 인스턴스 생성시 결정되도록 일반화 시킨 문법
	   문법 =   <데이터타입>
	   쓰면 뭐가좋은가? 왜쓰는가?
			중복을 줄여서 유지보수가 좋게.
			유연성을 높이면서 동시에 객체의 타입에 대한 안정성을 높일수있다.
			타입변환, 타입검사에 대한 코딩을 작성할 필요가 없게된다. 
				//개발자가 코드로 거르기전에 자바의 컴파일 단계에서 걸러지기때문에
				
				
1년차. 대표님이 질문. 공부 어떻게 하고 있냐?
A : 아직 1년밖에 안돼서 책보고, 코드보고 업무 배워가고 있습니다.
   그래서 딱히 누구에게 물어보거나 가르치거나 하지않고 업무파악을 하고있습니다.
B : 아직 1년밖에 안돼서 업무파악이 아직 안돼서 많이 물어보면서 배우고 있습니다.
	제가 공부하고 싶은 내용을 주제로 팀내에 스터디를 운영하고 있습니다.
	아직 1년이 안돼서 시간이 좀 있으니까 다른분들은 뭐하나 보고, 제가 할수있는한 도와주려고 하고있습니다.
---
선생님이 어떤 문제를 내줬다.
전공자가 풀면 :  "전공자니까 풀지. 저걸 나보고 어떻게 풀라고"
전공자가 못풀면 : "전공자도 못푸는거 나보고 어떻게 풀라고"
태도.
신입은 태도가 시작이자 끝.

---
한글보고 영어단어 맞추기
	// <퀴즈 : 한글보고 영어단어 맞추기>
		//제한시간 : 1시간
		//구현내용 : korDict라는 <String, String>맵을 만들고 
		//        랜덤으로 한글단어를 보여주고 
		//        Scanner로 유저가 영어를 입력하면
		//        맞다 아니다를 보여줘보세요.
		//힌트 : get함수를 써서 '키'로 '값'을 가져오는건 쉽게 할수있다.
		//   반대로 '값'으로 '키'를 찾으려면 keySet()에 반복문 돌려야한다.


HashMap<String, String> korDict = new HashMap<String, String>();
korDict.put(null, null);

//1. 해쉬맵 껍데기 생성
//2. 해쉬맵에 한글단어, 영어단어 데이터 넣기
	//3. 해쉬맵에서 랜덤 인덱스 추출
	//4. 랜덤인덱스로 랜덤 키 추출(문제)
	//5. 키로 밸류 추출(정답)
	//6. 유저에게 랜덤키 보여주기(문제 출력)
//7. 유저에게 답 스캐너로 받기(정답 제출)
//8. 제출받은것과 실제정답 비교
//9. 결과 출력
//10. 스캐너 닫기
