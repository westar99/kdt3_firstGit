0914 수요일
<출석체크>
09:10 문호준, 박근태(9/19까지 코로나), 차형주(오후), 홍승기(오후)

<공지사항>

<학습목표>
- 배열 복습[1교시]
	- 배열 : Array. 같은 개념의 데이터를 순서대로 나열한 자료형
			//그러나 자바스크립트에서는 다이나믹 타입드이기 때문에 자료형이 같지 않아도 된다. 
			//그러나 같다고 해서 다르게 쓰는것은 안좋은 방법이다.
			- index
			  요소가 들어있는 위치를 나타내는 숫자
			  0부터 시작하고, length-1에서 끝난다.
			- 배열선언하는법
				1. let 배열이름 = [요소1, 요소2, 요소3];
				2. let 배열이름 = new Array(요소1, 요소2, 요소3);
			- 요소에 접근하는법
			  배열이름[인덱스]
			- Q1. 숫자가 들어있는 배열을 받아서 5의 배수만 골라서 반환하는 fiveth함수
				//return은 배열로 하면되겠네
				//리턴할 배열의 크기가 동적인데 어떻게 하지?
				//인풋의길이만큼으로 아웃풋길이를 지정하면 동적길이를 고정길이로 바꿀수있지만
				문제는 요소가 군데군데 비어있게된다.
			- Q2. 배열을받아서 배열의 모든숫자의 평균을 반환하는 getAverage함수
			    //요소중에 숫자가 아닌요소가 있다면 걸러내야함
	
- 배열 심화[2교시]
	sort, sort(콜백함수), push, unshift, pop, slice
	
	Q3. 선생님이   present(배열, 발표자번호) 함수를 호출할거다.
	    1반의 학생 5명
		2반의 학생 6명
		3반의 학생 4명 배열 만들어놓고
		해당 반의 해당 번호의 학생에게 발표를 시켜보세요.
	
- 한국어배울때
  "커피" 가
  "세퍼드" 가
  "삼성" 이
  "lg 엘지" 가
  "레드불" 이
  받침이 있느냐 없느냐.
  외국인은 하나씩 문법 검사를 해야하지만, 한국인은 자연스럽게 바로됨.
  함수정의를 문법 찾아가면서 30번, 50번 했는데 못할수가 없다.


- 객체(4교시)
	객체는 속성과 행동의 묶음.  변수와 함수의 묶음.
	객체생성 문법
		let 객체명 = { 키:값, 키:값, 키:function(){} }
	생성자 함수
		function 객체명(파라미터1, 파라미터2){
			this.변수1 = 파라미터1;
			this.변수2 = 파라미터2;
		};
		
		생성자함수로 인스턴스 생성하는법
		let 인스턴스명 = new 함수명(인자);
	
	Q. 4 포켓몬스터 타입
	땅, 불, 물, 풀, 전기
	불 => 풀에게 1.3배 데미지,  물에게 0.7배 데미지
	물 => 불에게 1.3배 데미지,  풀에게 0.7배 데미지
	전기 => 물에게 1.3배 데미지, 땅에게 0.7배 데미지
	//지금은 attack함수 뿐이다.   여기에다가 적용해주세요.
	//땅1<풀2<불3<물4<전기5   <땅<풀<불<물<전기  반복
	//차이가 1이면 상성이 센거, 차이가 -1이면 상성이 약한거, 차이가 그외면 상성없는거


	# this (이것)   
	1. '함수를 호출하는 객체'를 가르킨다.
	2. 자바스크립트의 모든 함수는 명시적으로 정의한 매개변수 외에 
	   arguments, this 객체를 암묵적으로 전달받는다.

	//타입을 판별하는 함수
	//이 함수가 위치해야될곳이 어딘가?   
		게임시스템안에 위치해야되는건가? 어떤 포켓몬스터가 가지고있는 기능으로 위치해야되는건가?
	
	- 포켓몬스터 타입별 데미지 증가, 감소 만든거 발표 15:50
	@@@@@@@@ 정민경, 오세영, 차형주 @@@@@@@@
	//함수이름, 변수이름, 선언한 위치, 들여쓰기
	//기본문법숙지(함수정의, 호출, 반복문, 조건문, 객체)
	//알고리즘 (문제를 풀기위해 생각하는 매커니즘)


	//부장님이 포켓몬스터 객체 만들어놓고
		//차장님이 물포켓몬 스킬들 만들고
		//내가 물포켓중에 갸라도스 만들고
			//갸라도의 스킬 하나 만들고

	# object(객체) = 프로그램으로 구현해야될 대상.
		대상은 속성(변수)과 행동(메소드)
		과자라는 객체는 속성만 있다.//브랜드, 가격, 무게, 포장지재질, 이름
	# OOP(Object Oriented Programmin)
		대표 : java
		공통적인 개념을 객체의 단위로 묶어서 그놈을 설계도로 쓰고
		설계도대로 인스턴스를 공장처럼 찍어내는 방식의 개발 패러다임
		장점 : 인간이 생각하는 방법. 협업하기가 쉽다. 설계도를 만들어놓으면 찍어내기 좋고
		단점 : 간단한거라도 설계도부터 만들어야된다.
		절차지향프로그래밍, 객체지향프로그래밍, 함수형프로그래밍...
		
		절차지향프로그래밍 : 위에서부터 밑으로 한줄씩 절차대로 개발하는 방법론   대표 : c언어
			장점 : 간단한 프로그램일경우 개발이 빠르다. //설계도없이 그냥 바로 실행문
			단점 : 유지보수가어렵다 : 부분이 틀리면 전체가 고장난다.	
		함수형프로그래밍의 키포인트 : 외부환경으로 부터 철저히 독립적이다.  대표 : 스칼라, 하스켈
	# instance(인스턴스)
		생성자함수(설계도)를 new와 함께 호출하여 물리적으로 구현화된 실체
	# 생성자함수
		객체를 생성할때 쓰는 함수
	
	----객체, 생성자, 인스턴스----
	시바견이라는 개념 : 객체
	시바견의 유전자 : 생성자
	우리집에 살고있는 시바견 : 인스턴스
	
	에쿠스 : 객체
	에쿠스 설계도 : 생성자
	우리 삼촌의 에쿠스 : 인스턴스
	
	------
	높은 응집도, 낮은 결합도의 코드가 좋은 코드다.
	
- 이벤트(8교시)
	css의 기본 문법
	선택자로 누구에게 적용할건지 선택하고, 중괄호안에 적용할 디자인을 키:값;
	js의 기본문법
	선택자로 누구에게 적용할건지 선택하고, 적용할 기능을 호출.
