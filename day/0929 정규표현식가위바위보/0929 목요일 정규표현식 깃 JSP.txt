0929 목요일
<출석체크>
09:15 김승욱(오후), 오세영(오후), 정민경(오후), 차형주(오후)

<공지사항>
- 오전에 안온사람이 많아서 꼭 알아야될거 안하고, 알면 좋을거.
  (java.lang,   java.util,   Math,   스트링 버퍼,  람다식 )
원시형타입을 객체타입으로 자동으로 바꿔주는 것 : 오토박싱.   반대는 오토언박싱
	예) Integer i5 = 10;  //오토박싱
큰그릇에 작은그릇에 담긴값을 자동으로 바꿔주는 것 : 자동형변환.  오토캐스팅
	예) double d5 = 10;	//10 정수. int라는 원시형데이터타입의 값이지만 double로 넣으면 10.0으로 저장된다.
Deprecated : 되긴되는데 미래 버전에서 지원안될거니 사용을 지양해라.
static : 전역화.  인스턴스없이도 쓸수있고,  램에 공유되는 성질.
Math  : max, min, sqrt, sin, cos, abs, random
함수형인터페이스 : 함수가 단 하나만 들어있는 인터페이스.
람다표현식 : 자바는 메소드만 전달할수 있는 방법이 없기 때문에 그것을 극복하기 위해 나왔다.
	람다식 = 익명메소드
	쓰는법
		(파라미터) -> { 본문 }
인터넷에 있는 람다식을 해석할수있다, 
간단한 람다식정도는 구현할수있다.  -> 연봉 50만원.

좋은강의 판단 : how만 가르치는 강의x
     why : 왜 이것을 배우고 배우고 나면 무엇을 할수있을지.  이것이 없으면 얼마나 고통받을지.
	 자기가 이미 잘 알고있는 주제를 어떻게 가르치는 들어보고.
	 반드시 알려줘야될것을 안알려준다?  불필요한것을 너무 자세하게 알려준다?
	 예시가 적절하지않다?   틀린부분이 있다?
	시리즈로 완성되어있는지

<프로그래밍 패러다임>
절차지향적, 함수형 프로그래밍, 객제지향 프로그래밍...
자바는 객체지향프로그래밍인데 함수형 프로그래밍의 람다식을 받아들였고,
자바스크립트는 프로토타입기반 프로그래밍언어인데 자바의 생성자, 클래스를 받아들였고,
=> 서로 카피. 장점을 흡수. 결국 모든언어가 기본철학(why)을 (how)기반으로 비슷비슷해진다.
하나의 언어만 잘하면 다른언어 배우기가 쉬워진다.
예) 각각 자바배우는데 6개월, 파이썬배우는데 3개월
   -> 자바를 제대로 끝낸사람이 파이썬 배우면 1개월이면 됨.
   -> 파이썬을 제대로 끝낸사람이 자바 배우면 3개월이면 됨.
  경력25년차 한회사의 CTO급이 되면? 하나의 새로운 언어배우는데 2일.

<자바>
필수적(기초) : 데이터타입, 변수, 배열, **함수 생성과 호출**, 객체, 생성자
	-> 2개의 인스턴스가 서로 행위를 주고받는거 쉽게 할수있어야함
기본 : 오버라이딩, 오버로드, 상속, 구현, 예외, 랜덤, 사용자입력
초급심화 : 다형성, static, 싱글톤디자인패턴, 컬렉션프레임워크, enum
중급심화 : 제네릭, 파일입출력, 멀티스레드, 람다식

<단축키>
ctrl space : 자동완성
ctrl alt 아래방향키 : 해당블록 복붙
alt shift s : Source
ctrl shift o : 자동 import
f3 : 정의로 이동
ctrl / : 해당블록 주석처리
ctrl d : 해당 줄 지우기
ctrl shift f : 자동 줄맞춤
ctrl shift p : 괄호 짝으로 이동
ctrl shift r : 파일이름으로 찾기

<학습목표>
정규표현식 : 5교시

200만원
깃(로컬) : 7교시(+50만원)
깃(리모트) : 8교시(+50만원)
실제 프로젝트하면서 충돌 관리(+100만원) 로컬충돌 : 40만원   원격충돌 : 60만

깃(리모트. 깃헙) : 내일
서블릿 : 내일
JSP : 내일

- 내부조인 배웠지만 실제로 안씀
- 슬랙 실습과제 제출 채널에 가위바위보 타이머 쓰레드 올림

(https?:\/\/)?(www\.)?youtu\.be\/\-([a-zA-Z0-9]{11})

글자수체크
허락되지 않은 글자가 있는지
-./, 같이 문자열 중간에 이어진 기준자를 중심으로 구분된 값 체크
ggoomter@gmail.com
아무글자@특수문자와숫자가없는아무글자.허락된도메인
허락된도메인 = .com,   .net    ,  .co.kr,     .org    이런것들


reset : 과거의 역사를 지우면서 되돌아가는 방법
	소스트리에서는 : ""돌아가려고하는 커밋 우클릭 - 이 커밋까지 현재브런치를 초기화""
	hard : 현재 내소스는 유지한채로 역사만 되돌려라. 
	      35살인 내가 조선시대로 되돌아감.
	mixed : 역사는 해당시점으로 되돌리는데 워킹디렉토리는 그대로.
	soft : 나도 증조할아버지의 정자로 되돌아감.
	초보는 절대 하면 안되는 행위(특히 협업시)
revert : 역사를 되돌렸다는 새로운 역사를 기록하면서 되돌아가는 방법
	최근에 변화를 다시 빠꾸.
	3단계되돌려야된다?   제일최근꺼 빠구, 그다음꺼 빠구, 그다음꺼 빠꾸
	소스트리에서는 : ""취소하려고 하는 커밋 우클릭 - 커밋 되돌리기""
	
1000만원
200만원따고,   300만원따고
300만원 잃고,   200만원 잃고 
다시 1000만원 된 것과

그냥 1000만원 그대로 있는것은
결과는 같지만 역사가 다르다.

우리가 살아가고있는 이 차원이 하나다.
브랜치 = 다중평행우주. 멀티버스.